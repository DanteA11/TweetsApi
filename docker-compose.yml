services:

  postgres:
    image: postgres
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    hostname: ${POSTGRES_HOSTNAME}
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql.conf"
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql.conf:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  app:
    build:
      context: src
    container_name: ${APP_CONTAINER_NAME}
    depends_on:
      - ${POSTGRES_HOSTNAME}
    environment:
      - DATABASE_URL=postgresql+psycopg_async://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOSTNAME}/${POSTGRES_DB}
      - MAX_IMAGE_SIZE=${MAX_IMAGE_SIZE}
      - MEDIA_PATH=static/medias
      - API_NAME=${API_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - PORT=${PORT}
    stop_signal: SIGKILL
    restart: on-failure
    ports:
      - ${PORT}:80
    networks:
      - postgres
    volumes:
      - ./src/static/medias/:/app/static/medias

networks:
  postgres:
    driver: bridge